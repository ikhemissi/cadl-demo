// Shamelessly plugged from https://azure.github.io/cadl-azure/docs/getstarted/azure-resource-manager/step05

import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.Core;
using Azure.ResourceManager;

@armProviderNamespace
@service({
  title: "ContosoProviderHubClient",
  version: "2021-01-01-preview",
})
@doc("Contoso Resource Provider management API.")
@versionedDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
namespace Microsoft.ContosoProviderHub;

interface Operations extends Azure.ResourceManager.Operations {}

@lroStatus
enum ProvisioningState {
  ...ResourceProvisioningState,
  Provisioning,
  Updating,
  Deleting,
  Accepted,
}

@doc("The properties of UserResource")
model UserResourceProperties {
  @doc("The user's full name")
  fullName: string;

  @doc("The user's email address.")
  emailAddress: string;

  @doc("The status of the last operation.")
  provisioningState?: ProvisioningState;
}

@doc("A UserResource")
model UserResource is TrackedResource<UserResourceProperties> {
  @key("userName")
  @segment("users")
  @doc("Address name")
  @path
  name: string;
}

@doc("The details of a user notification.")
model NotificationDetails {
  @doc("The notification message.")
  message: string;

  @doc("If true, the notification is urgent.")
  urgent: boolean;
}

@armResourceOperations
interface Users {
  get is ArmResourceRead<UserResource>;
  create is ArmResourceCreateOrUpdateAsync<UserResource>;
  update is ArmResourcePatchSync<UserResource, UserResourceProperties>;
  delete is ArmResourceDeleteSync<UserResource>;
  listByResourceGroup is ArmResourceListByParent<UserResource>;
  listBySubscription is ArmListBySubscription<UserResource>;
  @doc("Send a notification to the user")
  @segment("notify")
  NotifyUser is ArmResourceActionNoContentSync<UserResource, NotificationDetails>;
}

@doc("An address resource belonging to a user resource.")
@parentResource(UserResource)
model AddressResource is ProxyResource<AddressResourceProperties> {
  @doc("Address name")
  @key("addressName")
  @segment("addresses")
  @path
  name: string;
}

@doc("The properties of AddressResource")
model AddressResourceProperties {
  @doc("The street address.")
  streetAddress: string;

  @doc("The city of the address.")
  city: string;

  @doc("The state of the address.")
  state: string;

  @doc("The zip code of the address.")
  zip: int32;

  @doc("The status of the last operation.")
  provisioningState?: ProvisioningState;
}

@armResourceOperations
interface Addresses {
  get is ArmResourceRead<AddressResource>;
  create is ArmResourceCreateOrUpdateSync<AddressResource>;
  update is ArmResourcePatchSync<AddressResource, AddressResourceProperties>;
  delete is ArmResourceDeleteSync<AddressResource>;
  listByParent is ArmResourceListByParent<AddressResource>;
}
